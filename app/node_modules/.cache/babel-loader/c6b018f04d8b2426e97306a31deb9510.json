{"ast":null,"code":"var _jsxFileName = \"/root/Documents/Workspaces/tests/comfama/app/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { searchAnime } from '../services/anime';\nimport '../styles/Search.css';\nimport { getAnimeRecommendations } from '../services/animeRecommendation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  toggleSearch\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState([]);\n\n  const handleEnter = evt => {\n    if (evt.key === 'Enter') {\n      if (query !== '') {\n        searchAnime({\n          query: query.toLowerCase()\n        }).then(data => {\n          if (data) {\n            getAnimeRecommendations({\n              animes: data\n            }).then(recommendedAnimes => {\n              setSearch(recommendedAnimes);\n              toggleSearch(true);\n            });\n          }\n        });\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    setSearch([]);\n    setQuery('');\n    toggleSearch(false);\n  };\n\n  const cancelDisplay = query !== '' && search.length > 0 ? 'block' : 'none';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar un anime...\",\n        value: query,\n        onChange: evt => setQuery(evt.target.value),\n        onKeyPress: handleEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        style: {\n          display: cancelDisplay\n        },\n        type: \"button\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__listitems\",\n      children: search.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: el.image_url,\n          alt: el.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search__item-content\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: el.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search__item-recommendation\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: el.recommendation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, el.mal_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"WlcbsA3nciqxatMUwtbCa6cWZik=\");\n\n_c = Search;\nSearch.propTypes = {\n  toggleSearch: PropTypes.func.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/root/Documents/Workspaces/tests/comfama/app/src/components/Search.jsx"],"names":["useState","PropTypes","searchAnime","getAnimeRecommendations","Search","toggleSearch","query","setQuery","search","setSearch","handleEnter","evt","key","toLowerCase","then","data","animes","recommendedAnimes","handleCancel","cancelDisplay","length","target","value","display","map","el","image_url","title","recommendation","mal_id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { searchAnime } from '../services/anime';\n\nimport '../styles/Search.css';\nimport { getAnimeRecommendations } from '../services/animeRecommendation';\n\nconst Search = ({ toggleSearch }) => {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState([]);\n\n  const handleEnter = (evt) => {\n    if (evt.key === 'Enter') {\n      if (query !== '') {\n        searchAnime({ query: query.toLowerCase() })\n          .then((data) => {\n            if (data) {\n              getAnimeRecommendations({ animes: data })\n                .then((recommendedAnimes) => {\n                  setSearch(recommendedAnimes);\n                  toggleSearch(true);\n                });\n            }\n          });\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    setSearch([]);\n    setQuery('');\n    toggleSearch(false);\n  };\n\n  const cancelDisplay = query !== '' && search.length > 0 ? 'block' : 'none';\n  return (\n    <div className=\"search\">\n      <div className=\"search__input\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar un anime...\"\n          value={query}\n          onChange={(evt) => setQuery(evt.target.value)}\n          onKeyPress={handleEnter}\n        />\n        <button onClick={handleCancel} style={{ display: cancelDisplay }} type=\"button\">X</button>\n      </div>\n\n      <div className=\"search__listitems\">\n        {\n          search.map((el) => (\n            <div key={el.mal_id} className=\"search__item\">\n              <img src={el.image_url} alt={el.title} />\n              <div className=\"search__item-content\">\n                <h3>{el.title}</h3>\n              </div>\n              <div className=\"search__item-recommendation\">\n                <h3>{el.recommendation}</h3>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  toggleSearch: PropTypes.func.isRequired,\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}