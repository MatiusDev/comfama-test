{"version":3,"sources":["services/anime.js","components/CarouselItem.jsx","components/Carousel.jsx","services/animeRecommendation.js","components/Search.jsx","components/App.jsx","index.js"],"names":["API_URL","CarouselItem","element","imageUrl","image_url","title","recommendation","className","src","alt","Carousel","data","useState","page","setPage","itemsRef","useRef","maxPages","length","ref","map","el","mal_id","onClick","slideSize","current","getBoundingClientRect","width","style","transition","transform","type","children","getAnimeRecommendations","animes","URL","fetch","method","headers","body","JSON","stringify","then","res","json","Search","toggleSearch","query","setQuery","search","setSearch","cancelDisplay","placeholder","value","onChange","evt","target","onKeyPress","key","results","searchAnime","toLowerCase","recommendedAnimes","display","App","setAnimes","searching","setSearching","useEffect","top","getTopAnimes","isSearching","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b760cacc.chunk.js","sourcesContent":["const API_URL = 'https://api.jikan.moe/v3';\n\nexport const getTopAnimes = ({ type = 'anime', page = 1 } = {}) => {\n  const URL = `${API_URL}/top/${type}/${page}`;\n  return fetch(URL)\n    .then((res) => res.json())\n    .then((data) => data.top);\n};\n\nexport const searchAnime = ({ type = 'anime', query = '' } = {}) => {\n  const URL = `${API_URL}/search/${type}?q=${query}&page=1`;\n  return fetch(URL)\n    .then((res) => res.json())\n    .then((data) => data.results);\n};\n","import PropTypes from 'prop-types';\n\nimport '../styles/CarouselItem.css';\n\nconst CarouselItem = ({ element }) => {\n  const { image_url: imageUrl, title, recommendation } = element;\n  return (\n    <div className=\"carousel__item\">\n      <img src={imageUrl} alt={title} />\n      <div className=\"carousel__item-content\">\n        <h3>{title}</h3>\n      </div>\n      <div className=\"carousel__item-recommendation\">\n        <h3>{recommendation}</h3>\n      </div>\n    </div>\n  );\n};\n\nCarouselItem.propTypes = {\n  element: PropTypes.object.isRequired,\n};\n\nexport default CarouselItem;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Carousel.css';\nimport CarouselItem from './CarouselItem';\n\nconst Carousel = ({ data }) => {\n  const [page, setPage] = useState(1);\n  const itemsRef = useRef();\n  const maxPages = data.length / 5;\n\n  const nextPage = () => {\n    if (itemsRef.current.children.length > 0) {\n      const slideSize = itemsRef.current.getBoundingClientRect().width;\n      itemsRef.current.style.transition = '1s ease-out all';\n      if (page === maxPages) {\n        itemsRef.current.style.transform = 'translateX(0px)';\n        setPage(1);\n      } else {\n        itemsRef.current.style.transform = `translateX(-${slideSize * page}px)`;\n        setPage(page + 1);\n      }\n    }\n  };\n\n  const previousPage = () => {\n    const slideSize = itemsRef.current.getBoundingClientRect().width;\n    itemsRef.current.style.transition = '1s ease-out all';\n    if (page === 1) {\n      itemsRef.current.style.transform = `translateX(-${slideSize * (maxPages - 1)}px)`;\n      setPage(maxPages);\n    } else {\n      itemsRef.current.style.transform = `translateX(-${slideSize * (page - 2)}px)`;\n      setPage(page - 1);\n    }\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div ref={itemsRef} className=\"carousel__listitems\">\n        {\n          data.map((el) => <CarouselItem key={el.mal_id} element={el} />)\n        }\n      </div>\n      <div className=\"carousel__menu\">\n        <button onClick={previousPage} type=\"button\" className=\"carousel__menu-left\">&lt;</button>\n        <button onClick={nextPage} type=\"button\" className=\"carousel__menu-right\">&gt;</button>\n      </div>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Carousel;\n","const API_URL = 'http://localhost:3005/api/anime';\n\nexport const getAnimeRecommendations = ({ animes }) => {\n  const URL = `${API_URL}/recommendation`;\n  return fetch(URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ animes }),\n  }).then((res) => res.json());\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { searchAnime } from '../services/anime';\n\nimport '../styles/Search.css';\nimport { getAnimeRecommendations } from '../services/animeRecommendation';\n\nconst Search = ({ toggleSearch }) => {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState([]);\n\n  const handleEnter = (evt) => {\n    if (evt.key === 'Enter') {\n      if (query !== '') {\n        searchAnime({ query: query.toLowerCase() })\n          .then((data) => {\n            if (data) {\n              getAnimeRecommendations({ animes: data })\n                .then((recommendedAnimes) => {\n                  setSearch(recommendedAnimes);\n                  toggleSearch(true);\n                });\n            }\n          });\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    setSearch([]);\n    setQuery('');\n    toggleSearch(false);\n  };\n\n  const cancelDisplay = query !== '' && search.length > 0 ? 'block' : 'none';\n  return (\n    <div className=\"search\">\n      <div className=\"search__input\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar un anime...\"\n          value={query}\n          onChange={(evt) => setQuery(evt.target.value)}\n          onKeyPress={handleEnter}\n        />\n        <button onClick={handleCancel} style={{ display: cancelDisplay }} type=\"button\">X</button>\n      </div>\n\n      <div className=\"search__listitems\">\n        {\n          search.map((el) => (\n            <div key={el.mal_id} className=\"search__item\">\n              <img src={el.image_url} alt={el.title} />\n              <div className=\"search__item-content\">\n                <h3>{el.title}</h3>\n              </div>\n              <div className=\"search__item-recommendation\">\n                <h3>{el.recommendation}</h3>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  toggleSearch: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { useEffect, useState } from 'react';\n\nimport { getTopAnimes } from '../services/anime';\n\nimport Carousel from './Carousel';\nimport Search from './Search';\n\nimport '../styles/App.css';\nimport { getAnimeRecommendations } from '../services/animeRecommendation';\n\nfunction App() {\n  const [animes, setAnimes] = useState([]);\n  const [searching, setSearching] = useState(false);\n\n  const toggleSearch = (isSearching) => setSearching(isSearching);\n\n  useEffect(() => {\n    getTopAnimes()\n      .then((data) => {\n        getAnimeRecommendations({ animes: data })\n          .then((recommendedAnimes) => {\n            setAnimes(recommendedAnimes);\n          });\n      });\n  }, []);\n\n  return (\n    <main className=\"container__main\">\n      <div className=\"container__anime\">\n        <Search toggleSearch={toggleSearch} />\n        { !searching && <Carousel data={animes} /> }\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);\n"],"sourceRoot":""}